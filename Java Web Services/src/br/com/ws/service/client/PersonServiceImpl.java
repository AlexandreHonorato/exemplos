
package br.com.ws.service.client;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PersonServiceImpl", targetNamespace = "http://service.ws.com.br/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PersonServiceImpl {


    /**
     * 
     * @return
     *     returns java.util.List<br.com.ws.service.client.Person>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "list", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.List")
    @ResponseWrapper(localName = "listResponse", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.ListResponse")
    @Action(input = "http://service.ws.com.br/PersonServiceImpl/listRequest", output = "http://service.ws.com.br/PersonServiceImpl/listResponse")
    public List<Person> list();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "delete", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.DeleteResponse")
    @Action(input = "http://service.ws.com.br/PersonServiceImpl/deleteRequest", output = "http://service.ws.com.br/PersonServiceImpl/deleteResponse")
    public void delete(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns br.com.ws.service.client.Person
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "read", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.Read")
    @ResponseWrapper(localName = "readResponse", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.ReadResponse")
    @Action(input = "http://service.ws.com.br/PersonServiceImpl/readRequest", output = "http://service.ws.com.br/PersonServiceImpl/readResponse")
    public Person read(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.Long
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "create", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.Create")
    @ResponseWrapper(localName = "createResponse", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.CreateResponse")
    @Action(input = "http://service.ws.com.br/PersonServiceImpl/createRequest", output = "http://service.ws.com.br/PersonServiceImpl/createResponse")
    public Long create(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "update", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://service.ws.com.br/", className = "br.com.ws.service.client.UpdateResponse")
    @Action(input = "http://service.ws.com.br/PersonServiceImpl/updateRequest", output = "http://service.ws.com.br/PersonServiceImpl/updateResponse")
    public void update(
        @WebParam(name = "arg0", targetNamespace = "")
        Person arg0);

}
